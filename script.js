// =============================
// === Culture Swap Script ===
// =============================

// üíé Premium status (stock√© localement)
let isPremium = localStorage.getItem("isPremium") === "true";

// =============================
// === GESTION PREMIUM
// =============================

// Activer Premium manuellement (simul√© ici)
function activatePremium() {
  isPremium = true;
  localStorage.setItem("isPremium", "true");
  alert("üéâ Merci pour votre soutien ! Premium activ√©.");
}

// =============================
// === LIMITATION D'UTILISATION
// =============================

// V√©rifie si l'utilisateur peut publier un t√©moignage
function canPostTestimony() {
  if (isPremium) return true;

  const lastPost = localStorage.getItem("lastPostDate");
  const today = new Date().toDateString();

  return lastPost !== today;
}

// Fonction pour publier un t√©moignage
function postTestimony(content) {
  if (!canPostTestimony()) {
    alert("‚ö†Ô∏è Version gratuite : 1 t√©moignage par jour.\nPassez en Premium pour publier librement !");
    return;
  }

  if (!content.trim()) {
    alert("‚õî Le t√©moignage ne peut pas √™tre vide.");
    return;
  }

  // Simule l‚Äôenregistrement (√† connecter √† Firebase ou autre plus tard)
  console.log("T√©moignage publi√© :", content);

  // Enregistre la date de publication
  localStorage.setItem("lastPostDate", new Date().toDateString());

  alert("‚úÖ T√©moignage publi√© avec succ√®s !");
}

// =============================
// === UTILITAIRES TEST
// =============================

// R√©initialise les donn√©es locales (pour tests uniquement)
function resetLocalStorage() {
  localStorage.removeItem("isPremium");
  localStorage.removeItem("lastPostDate");
  alert("üßπ Donn√©es locales r√©initialis√©es.");
}
